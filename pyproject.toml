[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dantzig-wolfe"
version = "0.1.0"
description = "A Dantzig-Wolfe decomposition implementation for block-angular optimization problems"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Intended Audience :: Science/Research",
]
keywords = ["optimization", "linear-programming", "dantzig-wolfe"]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.20.0",
    "gurobipy>=10.0.0",
    "scipy>= 1.11.0",
]

[project.urls]
"Homepage" = "https://github.com/quantresearch1/dantzig-wolfe"
"Bug Tracker" = "https://github.com/quantresearch1/dantzig-wolfe/issues"

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "mypy>=1.0.0",
]

[tool.uv]
default-groups = "all"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]
ignore = ["E203", "E501", "N803", "N806"]

[tool.ruff.per-file-ignores]
"tests/*" = ["E501"]

[tool.ruff.isort]
known-third-party = ["numpy", "gurobipy"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=dantzig_wolfe --cov-report=term-missing --cov-report=xml"

[tool.coverage.run]
source = ["dantzig_wolfe"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
